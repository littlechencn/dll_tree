<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.littlechen.dlltree.dao.TWineDllFileContainMapper">
    <resultMap id="BaseResultMap" type="cn.littlechen.dlltree.model.TWineDllFileContain">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="dll_name" property="dllName" jdbcType="VARCHAR"/>
        <result column="f_class" property="fClass" jdbcType="VARCHAR"/>
        <result column="f_path" property="fPath" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, dll_name, f_class, f_path
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cn.littlechen.dlltree.model.TWineDllFileContainExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_wine_dll_file_contain
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectDistinctDll" resultType="string">
    select distinct dll_name
    from t_wine_dll_file_contain
      order by dll_name
  </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_wine_dll_file_contain
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_wine_dll_file_contain
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="cn.littlechen.dlltree.model.TWineDllFileContainExample">
        delete from t_wine_dll_file_contain
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.littlechen.dlltree.model.TWineDllFileContain">
    insert into t_wine_dll_file_contain (id, dll_name, f_class, 
      f_path)
    values (#{id,jdbcType=INTEGER}, #{dllName,jdbcType=VARCHAR}, #{fClass,jdbcType=VARCHAR}, 
      #{fPath,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.littlechen.dlltree.model.TWineDllFileContain">
        insert into t_wine_dll_file_contain
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="dllName != null">
                dll_name,
            </if>
            <if test="fClass != null">
                f_class,
            </if>
            <if test="fPath != null">
                f_path,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="dllName != null">
                #{dllName,jdbcType=VARCHAR},
            </if>
            <if test="fClass != null">
                #{fClass,jdbcType=VARCHAR},
            </if>
            <if test="fPath != null">
                #{fPath,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.littlechen.dlltree.model.TWineDllFileContainExample"
            resultType="java.lang.Integer">
        select count(*) from t_wine_dll_file_contain
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_wine_dll_file_contain
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.dllName != null">
                dll_name = #{record.dllName,jdbcType=VARCHAR},
            </if>
            <if test="record.fClass != null">
                f_class = #{record.fClass,jdbcType=VARCHAR},
            </if>
            <if test="record.fPath != null">
                f_path = #{record.fPath,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_wine_dll_file_contain
        set id = #{record.id,jdbcType=INTEGER},
        dll_name = #{record.dllName,jdbcType=VARCHAR},
        f_class = #{record.fClass,jdbcType=VARCHAR},
        f_path = #{record.fPath,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.littlechen.dlltree.model.TWineDllFileContain">
        update t_wine_dll_file_contain
        <set>
            <if test="dllName != null">
                dll_name = #{dllName,jdbcType=VARCHAR},
            </if>
            <if test="fClass != null">
                f_class = #{fClass,jdbcType=VARCHAR},
            </if>
            <if test="fPath != null">
                f_path = #{fPath,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.littlechen.dlltree.model.TWineDllFileContain">
    update t_wine_dll_file_contain
    set dll_name = #{dllName,jdbcType=VARCHAR},
      f_class = #{fClass,jdbcType=VARCHAR},
      f_path = #{fPath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>